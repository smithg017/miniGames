package Dodgem;

import components.Field;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;

import javax.swing.Timer;

import components.Entity;

public class DodgemField extends Field implements KeyListener
{
	private static final long serialVersionUID = 5367865662677506729L;
	private Entity player;
	private ArrayList<Entity> enemies;
	private Timer t;
	private int counter;
	public DodgemField()
	{
		super();
		player = new Entity(320, 240, 0, 0, 20, 20, 0, 0);
		enemies = new ArrayList<Entity>();
		t = new Timer(5, this);
		counter = 0;
		
		t.start();
	}
	@Override
	public void actionPerformed(ActionEvent e) 
	{
		counter++;
		player.update();
		for(int j=0; j < enemies.size(); j++)
		{
			enemies.get(j).update();
			if(enemies.get(j).getX() < -20 || enemies.get(j).getX() > 640 || enemies.get(j).getY() > 480 || enemies.get(j).getY() < -20)
				enemies.remove(j);
		}
		
		if(counter%100 == 0)
		{
			int x,y,velx,vely;
			double r = Math.random();
			if(r < .25)
			{
				x=0;
				y=(int)(Math.random()*480);
			}
			else if(r < .5)
			{
				
			}
			else if(r < .75)
			{
				
			}
			else
			{
				
			}
			enemies.add(new Entity());
		}
	}

	@Override
	public void paintComponent(Graphics g) 
	{
		
	}
	@Override
	public void keyPressed(KeyEvent e) 
	{
		
	}
	@Override
	public void keyReleased(KeyEvent e) 
	{
		
	}
	@Override
	public void keyTyped(KeyEvent e) 
	{
		
	}
	
}
